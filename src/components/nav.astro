---
import { and, eq } from "drizzle-orm";
import { PlusCircle } from "lucide-react";

import { db, schema } from "@/lib/db";

import { buttonVariants } from "@/components/ui/button";
import { UserMenu } from "@/components/user-menu";
import LanguagePicker from "@/components/language-picker";
import PetLink from "@/components/pet-link";

const { session, t } = Astro.locals;

if (!session) {
  return null;
}

const pets = await db.query.pets.findMany({
  where: and(
    eq(schema.pets.userId, session.user.userId),
    eq(schema.pets.creating, false),
  ),
  columns: {
    id: true,
  },
});
---

<div class="py-2 px-4 border-b border-border flex items-center">
  <div class="mr-4">
    <h1 class="font-black text-xl">Pet app</h1>
  </div>
  <nav>
    <ul class="flex space-x-2 items-center py-1 px-4">
      <li>
        <a
          href={Astro.locals.translatePath("/app")}
          class={buttonVariants({ size: "sm", variant: "link" })}
        >
          {t("nav.home")}
        </a>
      </li>
    </ul>
  </nav>
  <div class="ml-auto px-2"><LanguagePicker /></div>
  {
    session && (
      <UserMenu
        client:idle
        avatarUrl={session.user.avatarUrl}
        name={session.user.displayName || session.user.googleSub}
      />
    )
  }
</div>

<nav>
  <ul class="flex space-x-2 items-center py-1 px-4 bg-muted border-b">
    <p class="text-sm text-muted-foreground">{t("nav.myPets")}:</p>
    {
      pets.map((pet) => (
        <li>
          <PetLink petId={pet.id} />
        </li>
      ))
    }
    <div class="!ml-auto pl-4">
      <a
        href={Astro.locals.translatePath("/pets/new")}
        class={buttonVariants({ size: "sm", variant: "outline" })}
      >
        <PlusCircle className="w-4 h-4 mr-2" />
        {t("nav.createPet")}
      </a>
    </div>
  </ul>
</nav>
